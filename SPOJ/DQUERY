//                      go_on
//              I am the one who knocks !!
#include <bits/stdc++.h>
using namespace std;


//      LOOPS AND MEM
#define mz(a) memset(a,0,sizeof(a))
#define md(a,m,n) memset(a,-1,sizeof(a[0][0])*m*n);
#define mm(a) memset(a,-1,sizeof(a))
#define minf(a) memset(a,MEMSET_INF,sizeof(a));
#define SZ(x) ((int)(x).size())
#define f(i,a,n) for(int i=a;i<=n;++i)
#define fs(i,a,n) for(long long int i=a;i<n;++i)
#define fl(i,n,a) for(long long int i=n;i>=a;--i)


//       I/O
#define i(n) cin>>n
#define is(n) scanf("%s",n)
#define s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define o(n) cout<<n
#define p(n) printf("%d",n)
#define ps printf(" ")
#define pn printf("\n")
#define pl(n) printf("%lld",n)
#define os cout<<" "
#define on cout<<"\n"


//       CONTAINERS
typedef vector <int> vi;
typedef pair<int, int> pii;
#define PB push_back
#define MP make_pair
#define ff first
#define ss second
#define all(a)  a.begin(),a.end()
#define fv(i,v) for(auto i = v.begin();i !=v.end(); ++i)


//        DEF AND INIT
#define ll long long int
#define MOD (ll)(1e9+7)
#define eps 1e-15
/*
        freopen("in.txt", "r", stdin);
        freopen("out.txt", "w", stdout);
*/
const int MAX = 200005;

#define BLOCK 500

int n,a[MAX],ans[MAX],res,cnt[1000002];

//                MO ALGO
struct MO {
	int L, R, K, i;
}q[MAX];

bool cmp(MO x, MO y)
{
	if(x.L/BLOCK != y.L/BLOCK)         return x.L/BLOCK < y.L/BLOCK;
	return x.R < y.R;
}

void addMO(int pos)
{
	++cnt[a[pos]];
	if(cnt[a[pos]]==1)  ++res;
}

void remMO(int pos)
{
	--cnt[a[pos]];
	if(!cnt[a[pos]])    --res;
}

int main()
{
        ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);

        int t,m;
        i(n);
        f(i,0,n-1)      i(a[i]);
        i(m);
        f(i,0,m-1)
        {
            i(q[i].L);i(q[i].R);
            --q[i].L;
            --q[i].R;
            q[i].i=i;
        }
        sort(q,q+m,cmp);
        int curL=0, curR=0;
        f(i,0,m-1)
        {
            int L=q[i].L, R=q[i].R;
            while(curL < L) {
                remMO(curL);
                ++curL;
            }
            while(curL > L) {
                addMO(curL-1);
                --curL;
            }
            while(curR <= R) {
                addMO(curR);
                ++curR;
            }
            while(curR > R+1) {
                remMO(curR-1);
                --curR;
            }
            ans[q[i].i]=res;
        }
        f(i,0,m-1)  o(ans[i]),on;

        return 0;
}
